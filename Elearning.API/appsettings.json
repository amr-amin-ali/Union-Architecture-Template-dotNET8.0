{
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft.AspNetCore": "Warning"
    }
  },
  "LoggerConfigurations": {
    "AllowLogging": true,
    "AllowedLevels": [ "Trace", "Debug", "Warn", "Error", "Info", "Fatal", "Off" ]
  },
  "NLog": {
    "extensions": [
      { "assembly": "NLog.Extensions.Logging" },
      { "assembly": "NLog.Web.AspNetCore" }
    ],
    "internalLogFile": "d:\\Elearning_Logs\\Internal-Nlog.txt",
    "internalLogLevel": "Info",
    "rules": [
      {
        "logger": "*",
        "levels": "Error,Trace,Info,Warn,Fatal,Debug",
        "writeTo": "allfile"
      },
      {
        "logger": "Elearning.*",
        "level": "Error",
        "writeTo": "Database"
      },
      {
        "logger": "Elearning.*",
        "level": "Error",
        "writeTo": "errors"
      },
      {
        "logger": "Elearning.*",
        "level": "Trace",
        "writeTo": "Traces"
      },
      {
        "logger": "Elearning.*",
        "level": "Debug",
        "writeTo": "debugs"
      },
      {
        "logger": "Elearning.*",
        "level": "Info",
        "writeTo": "infos"
      },
      {
        "logger": "Elearning.*",
        "level": "Warn",
        "writeTo": "warns"
      },
      {
        "logger": "Microsoft.*",
        "levels": "Error,Trace,Info,Warn,Fatal,Debug",
        "writeTo": "microsoft"
      }
    ],
    "targets": {
      "allfile": {
        "type": "File",
        "fileName": "d:\\Elearning_Logs\\Nlog-All-${shortdate}.log",
        "layout": "| ${longdate}  |  ${level:uppercase=true}  | Logger: ${logger} |  ${message} | EXCEPTION:  ${exception:format=tostring} \n ________________________________________________________________________________________________________________________________________________________\n"
      },
      "errors": {
        "type": "File",
        "fileName": "d:\\Elearning_Logs\\Nlog-Errors-${shortdate}.log",
        "layout": "| ${longdate}  |  ${level:uppercase=true}  | Logger: ${logger} |  ${message} | EXCEPTION:  ${exception:format=tostring} \n ________________________________________________________________________________________________________________________________________________________\n"
      },
      "Traces": {
        "type": "File",
        "fileName": "d:\\Elearning_Logs\\Nlog-Traces-${shortdate}.log",
        "layout": "| ${longdate}  |  ${level:uppercase=true}  | Logger: ${logger} |  ${message} | EXCEPTION:  ${exception:format=tostring} \n ________________________________________________________________________________________________________________________________________________________\n"
      },
      "debugs": {
        "type": "File",
        "fileName": "d:\\Elearning_Logs\\Nlog-Debugs-${shortdate}.log",
        "layout": "| ${longdate}  |  ${level:uppercase=true}  | Logger: ${logger} |  ${message} | EXCEPTION:  ${exception:format=tostring} \n ________________________________________________________________________________________________________________________________________________________\n"
      },
      "infos": {
        "type": "File",
        "fileName": "d:\\Elearning_Logs\\Nlog-Infos-${shortdate}.log",
        "layout": "| ${longdate}  |  ${level:uppercase=true}  | Logger: ${logger} |  ${message} | EXCEPTION:  ${exception:format=tostring} \n ________________________________________________________________________________________________________________________________________________________\n"
      },
      "warns": {
        "type": "File",
        "fileName": "d:\\Elearning_Logs\\Nlog-Warns-${shortdate}.log",
        "layout": "| ${longdate}  |  ${level:uppercase=true}  | Logger: ${logger} |  ${message} | EXCEPTION:  ${exception:format=tostring} \n ________________________________________________________________________________________________________________________________________________________\n"
      },
      "microsoft": {
        "type": "File",
        "fileName": "d:\\Elearning_Logs\\Nlog-MICROSOFT-${shortdate}.log",
        "layout": "| ${longdate}  |  ${level:uppercase=true}  | Logger: ${logger} | Fn Parameter: ${fnParameter}  |  ${message} | EXCEPTION:  ${exception:format=tostring} \n ________________________________________________________________________________________________________________________________________________________\n"
      },
      "database": {
        "type": "Database",
        "dbProvider": "System.Data.SqlClient",
        "keepConnection": "true",
        "connectionString": "Data Source=.\\;Initial Catalog=ElearningDB;Integrated Security=True;TrustServerCertificate=True;MultipleActiveResultSets=True",
        "commandText": "INSERT INTO [dbo].[Logs] ([UserId], [Controller], [Action], [Logger], [Message], [StackTrace], [Exception], [FnParameter], [Level], [Url], [CreatedAt]) VALUES ( @UserId, @Controller, @Action, @Logger, @Message, @StackTrace, @Exception, @FnParameter, @Level, @Url, @CreatedAt)",
        "parameters": [
          {
            "name": "@UserId",
            "layout": "${event-context:item=UserId}",
            "dbType": "DbType.String"
          },
          {
            "name": "@Controller",
            "layout": "${event-context:item=Controller}",
            "dbType": "DbType.String"
          },
          {
            "name": "@Action",
            "layout": "${event-context:item=Action}",
            "dbType": "DbType.String"
          },
          {
            "name": "@Logger",
            "layout": "${logger}",
            "dbType": "DbType.String"
          },
          {
            "name": "@Message",
            "layout": "${event-context:item=message}",
            "dbType": "DbType.String"
          },
          {
            "name": "@StackTrace",
            "layout": "${stacktrace}",
            "dbType": "DbType.String"
          },
          {
            "name": "@Exception",
            "layout": "${event-context:item=Exception}",
            "dbType": "DbType.String"
          },
          {
            "name": "@FnParameter",
            "layout": "${event-context:item=FnParameter}",
            "dbType": "DbType.String"
          },
          {
            "name": "@Level",
            "layout": "${level}",
            "dbType": "DbType.String"
          },
          {
            "name": "@Url",
            "layout": "${aspnet-request-url}",
            "dbType": "DbType.String"
          },
          {
            "name": "@CreatedAt",
            "layout": "${date}",
            "dbType": "DbType.DateTime"
          }
        ]
      }
    }
  },

  "AllowedHosts": "*",
  "ConnectionStrings": {
    // "DefaultConnection": "Data Source=DESKTOP-EF8J7CK;Initial Catalog=LogsDb;Integrated Security=True;Connect Timeout=30;Encrypt=False;Trust Server Certificate=False;Application Intent=ReadWrite;Multi Subnet Failover=False"
    "DefaultConnection": "Data Source=.\\;Initial Catalog=ElearningDB;Integrated Security=True;TrustServerCertificate=True;MultipleActiveResultSets=True"

  },
  "ApiIntegrationUrls": "https://jsonplaceholder.typicode.com/users",


  "AD": {
    "port": 389,
    "zone": "com",
    "domain": "our-company",
    "subdomain": "ad",
    "crew": "crew",
    "managers": "managers",
    "username": "SERVICE-USER-NAME",
    "password": "SERVICE-USER-PASSWORD"
  },
  "LdapConfiguration": {
    "Server": "dc.your-domain.de",
    "SearchBase": "DC=test,DC=com",
    "Schema": "Active Directory",
    "IsRecursiveGroupMembership": true,
    "Port": 389,
    "IsSsl": true,
    "IsNoCertificateCheck": true
  },
  "JWT": {
    "ValidAudience": "http://localhost:4200",
    "ValidIssuer": "http://localhost:5000",
    "Secret": "zN8s7XzHPbYLgDZt49nHJRl0hjGldzLkbZ4biCxhNogU2tGZQFVQkKEQlXe+Kh5N2yqL7rD6R6S6bQZn2JYyMg=="
    // "JWTAuthenticationHIGHsecuredPasswordVVVp1OH7Xzyr"
  },
  "EmailSettings": {
    "SmtpServer": "smtp.hostinger.com",
    "SmtpPort": 587,
    "SmtpUsername": "",
    "SmtpPassword": "",
    "SenderEmail": ""
  }

}
